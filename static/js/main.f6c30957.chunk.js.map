{"version":3,"sources":["logo.svg","api.jsx","components/race.jsx","components/races.jsx","components/skill.jsx","components/skills.jsx","components/demon.jsx","components/demons.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","API_URL","Race","props","state","race","demons","name","this","match","params","axios","get","game","then","res","data","setState","console","log","demon","ultimate","map","tag","Chip","label","size","variant","color","className","align","Link","href","process","src","alt","description","Typography","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","row","key","level","badges","React","Component","Races","Grid","container","justify","spacing","Object","values","sort","a","b","id","item","md","alignItems","Card","CardActionArea","CardMedia","component","image","CardContent","Skill","skill","persona","sm","element","effect","cost","power","hit","price","rank","Skills","options","filter","filterType","pagination","print","selectableRows","columns","customBodyRenderLite","dataIndex","skills","Fragment","title","game_specific","icons","elements","stats","max_stat","FusionTable","special_fusion","Paper","direction","material","Demon","resistance","resi","innate","resistance_color","resistance_name","plotOptions","bar","horizontal","dataLabels","position","chart","height","type","text","xaxis","categories","yaxis","max","width","japanese_name","is_ultimate","xs","series","elem","i","Demons","filterList","baseTheme","createMuiTheme","config","presets","createStandardLayout","Home","Acordeon","games","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","List","category","url","icon","ListItem","button","ListItemIcon","ListItemText","primary","App","ThemeProvider","theme","renderMenuIcon","open","Button","renderIcon","collapsed","Container","basename","path","exact","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f6c30957.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// export const API_URL = `http://localhost:5000/`\nexport const API_URL = `https://silvercobraa.pythonanywhere.com/`\n","import React from 'react'\nimport axios from 'axios'\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport Typography from '@material-ui/core/Typography';\nimport Chip from '@material-ui/core/Chip';\nimport Link from '@material-ui/core/Link';\n\nimport {API_URL} from '../api.jsx'\n\nexport default class Race extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    state = {\n        race: {demons: []},\n    }\n    componentDidMount() {\n        const name = this.props.match.params.race\n        axios.get(API_URL + this.props.match.params.game + `/race/${name}`).then(res => {\n            const race = res.data;\n            this.setState({ race })\n            console.log(race)\n        })\n        console.log('GAAAAME', this.props.match.params.game)\n    }\n    badges(demon) {\n        return <div>\n            {demon.ultimate.map(tag =>\n                <Chip label={tag} size=\"small\" variant=\"outlined\" color=\"secondary\"/>\n            )}\n        </div>\n        if (demon.ultimate) {\n            return\n        }\n    }\n    render() {\n        return (\n            <div className=\"col-sm-12\" align=\"center\">\n            <Link href={process.env.PUBLIC_URL + \"/#/\" + this.props.match.params.game + \"/race/\"+this.props.match.params.race}><h4>{this.props.match.params.race}</h4></Link>\n            <img className=\"img-thumbnail\" align=\"center\" src={API_URL+\"/static/\" + this.props.match.params.game + \"/race/\" + this.props.match.params.race + \".webp\"} alt={this.props.match.params.race}/>\n            <p>{this.state.race.description}</p>\n            <Typography variant=\"h5\" align=\"center\">Demons belonging to this race</Typography>\n            <TableContainer>\n              <Table>\n                <TableHead><TableRow><TableCell>Level</TableCell><TableCell>Name</TableCell></TableRow></TableHead>\n                <TableBody>\n                {this.state.race.demons.map((row) => (\n                    <TableRow key={row.name}><TableCell>{row.level}</TableCell><TableCell><Link href={process.env.PUBLIC_URL + \"/#/\" + this.props.match.params.game + \"/demon/\"+row.name}>{row.name}</Link> {this.badges(row)}</TableCell></TableRow>\n                ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport axios from 'axios'\nimport Card from '@material-ui/core/Card'\nimport Grid from '@material-ui/core/Grid'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\n\nimport {API_URL} from '../api.jsx'\n\n\nexport default class Races extends React.Component {\n    state = {\n        race: {}\n    }\n    componentDidMount() {\n        axios.get(API_URL + this.props.match.params.game + `/race`).then(res => {\n            const race = res.data;\n            this.setState({ race })\n        })\n    }\n    render() {\n        return (\n            <Grid container justify=\"center\" spacing={3}>\n            {Object.values(this.state.race)\n                .sort((a,b) => (a.id < b.id ? -1 : a.id > b.id ? 1 : 0))\n                .map(row => (\n                  <Grid item md=\"2\" alignItems=\"center\">\n                  <Card>\n                    <CardActionArea>\n                      <CardMedia\n                        component=\"img\"\n                        image={API_URL+\"/static/\"+this.props.match.params.game+\"/race/\"+row.name+\".webp\"}\n                      />\n                      <CardContent>\n                        <Typography variant=\"h6\" align=\"center\">\n                          <Link href={process.env.PUBLIC_URL+\"/#/\"+this.props.match.params.game+\"/race/\"+row.name}>{row.name}</Link>\n                        </Typography>\n                      </CardContent>\n                    </CardActionArea>\n                  </Card>\n                  </Grid>\n                )\n            )}\n            </Grid>\n        )\n    }\n}\n","import React from 'react'\nimport axios from 'axios'\n// import TableContainer from '@material-ui/core/TableContainer'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCell from '@material-ui/core/TableCell'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Link from '@material-ui/core/Link'\n\nimport {API_URL} from '../api.jsx'\n\nexport default class Skill extends React.Component {\n    state = {\n        skill: {\n            persona: [],\n        }\n    }\n    componentDidMount() {\n        const name = this.props.match.params.skill\n        axios.get(API_URL + `skill/${name}`).then(res => {\n            const skill = res.data;\n            this.setState({ skill: skill })\n        })\n    }\n    render() {\n        return (\n            <Grid container spacing={3}>\n              <Grid item sm=\"12\">\n                <Typography variant=\"h5\" align=\"center\">{this.state.skill.name}</Typography>\n              </Grid>\n              <Grid item sm=\"12\">\n                <Table>\n                  <TableHead><TableRow><TableCell align=\"right\">Level</TableCell><TableCell>Persona</TableCell></TableRow></TableHead>\n                  <TableBody>\n                    <TableRow><TableCell align=\"right\">Type</TableCell><TableCell>{this.state.skill.element}</TableCell></TableRow>\n                    <TableRow><TableCell align=\"right\">Effect</TableCell><TableCell>{this.state.skill.effect}</TableCell></TableRow>\n                    <TableRow><TableCell align=\"right\">Cost</TableCell><TableCell>{this.state.skill.cost ? this.state.skill.cost >= 1000 ? (this.state.skill.cost-1000)+\" SP\" : this.state.skill.cost+\"% HP\" : \"N/A\"}</TableCell></TableRow>\n                    <TableRow><TableCell align=\"right\">Power</TableCell><TableCell>{this.state.skill.power ? this.state.skill.power : \"N/A\"}</TableCell></TableRow>\n                    <TableRow><TableCell align=\"right\">Hit rate</TableCell><TableCell>{this.state.skill.hit ? this.state.skill.hit+\"%\" : \"N/A\"}</TableCell></TableRow>\n                    <TableRow><TableCell align=\"right\">Price</TableCell><TableCell>{this.state.skill.price ? this.state.skill.price : \"N/A\"}</TableCell></TableRow>\n                    <TableRow><TableCell align=\"right\">Skill card rank</TableCell><TableCell>{this.state.skill.rank ? this.state.skill.rank : \"N/A\"}</TableCell></TableRow>\n                  </TableBody>\n                </Table>\n              </Grid>\n              <Grid item sm=\"12\">\n                <Typography variant=\"h5\" align=\"center\">Personas that can learn this skill</Typography>\n              </Grid>\n              <Grid item sm=\"12\">\n                <Table>\n                  <TableHead><TableRow><TableCell align=\"right\">Level</TableCell><TableCell>Persona</TableCell></TableRow></TableHead>\n                  <TableBody>\n                    {this.state.skill.persona.map((row) => (\n                      <TableRow><TableCell align=\"right\">{row.level === 0 ? '-' : row.level}</TableCell><TableCell align=\"left\"><Link href={process.env.PUBLIC_URL+\"/#/p4g/persona/\"+row.persona}>{row.persona}</Link></TableCell></TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </Grid>\n          </Grid>\n        )\n    }\n}\n","import React from 'react'\nimport axios from 'axios'\nimport MUIDataTable from 'mui-datatables'\nimport Link from '@material-ui/core/Link'\n\nimport {API_URL} from '../api.jsx'\n\nexport default class Skills extends React.Component {\n    state = {\n      options: {\n        filter: true,\n        filterType: \"dropdown\",\n        pagination: false,\n        print: false,\n        selectableRows: 'none',\n      },\n      columns: [\n        {\n          name: \"Name\",\n          options: {\n            filter: false,\n            customBodyRenderLite: (dataIndex) => {\n              let row = this.state.data[dataIndex]\n              let val = <Link href={process.env.PUBLIC_URL+\"/#/p4g/skill/\"+row[0]}>{row[0]}</Link>;\n              return val;\n            },\n          }\n        },\n        \"Type\",\n        \"Card Rank\",\n        {\n          name: \"Effect\",\n          options: {\n              filter: false,\n          }\n        },\n      ],\n      data: [\n    ],\n    }\n\n  componentDidMount() {\n      axios.get(API_URL + `skill`).then(res => {\n          const skills = Object.values(res.data).map(row => [row.name, row.element,row.rank, row.effect])\n          this.setState({ data: skills })\n      })\n  }\n\n  render() {\n      return (\n          <React.Fragment>\n          <MUIDataTable\n          title=\"Skills\"\n          data={this.state.data}\n          columns={this.state.columns}\n          options={this.state.options}\n          />\n          </React.Fragment>\n      );\n  }\n}\n","import React from 'react'\nimport axios from 'axios'\nimport Grid from '@material-ui/core/Grid'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCell from '@material-ui/core/TableCell'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport Link from '@material-ui/core/Link'\nimport ReactApexChart from 'react-apexcharts'\n\nimport {API_URL} from '../api.jsx'\n\nconst game_specific = {\n    icons: {\n        'p3p': ['lemon.svg', 'lemon.svg', 'lemon.svg', 'fire.svg', 'snowflake.svg', 'bolt.svg', 'wind.svg', 'sun.svg', 'moon.svg'],\n        'p4g': ['fist-raised.svg', 'fire.svg', 'snowflake.svg', 'bolt.svg', 'wind.svg', 'sun.svg', 'moon.svg'],\n        'p5r': ['fist-raised.svg', 'lemon.svg', 'fire.svg', 'snowflake.svg', 'bolt.svg', 'wind.svg', 'sun.svg', 'radiation.svg', 'lemon.svg', 'skull.svg'],\n        'smt4': ['fist-raised.svg', 'lemon.svg', 'fire.svg', 'snowflake.svg', 'bolt.svg', 'wind.svg', 'sun.svg', 'moon.svg'],\n    },\n    elements: {\n        'p3p': ['Slash', 'Strike', 'Pierce', 'Fire', 'Ice', 'Electric', 'Wind', 'Light', 'Dark'],\n        'p4g': ['Physical', 'Fire', 'Ice', 'Electric', 'Wind', 'Light', 'Dark'],\n        'p5r': ['Physical', 'Gun', 'Fire', 'Ice', 'Electric', 'Wind', 'Psychokinesis', 'Nuclear', 'Bless', 'Curse'],\n        'smt4': ['Physical', 'Gun', 'Fire', 'Ice', 'Electric', 'Force', 'Light', 'Dark'],\n    },\n    stats: {\n        'p3p': ['Strength', 'Magic', 'Endurance', 'Agility', 'Luck'],\n        'p4g': ['Strength', 'Magic', 'Endurance', 'Agility', 'Luck'],\n        'p5r': ['Strength', 'Magic', 'Endurance', 'Agility', 'Luck'],\n        'smt4': ['HP', 'SP', 'Strength', 'Dexterity', 'Magic', 'Agility', 'Luck'],\n    },\n    max_stat: {\n        'p3p': 80,\n        'p4g': 80,\n        'p5r': 80,\n        'smt4': 500,\n    }\n}\n\nclass FusionTable extends React.Component {\n    super(props) {\n        this.props = props\n    }\n    render() {\n        console.log(this.props.special_fusion)\n        if (this.props.special_fusion) {\n            return <Grid item sm={4}>\n                <Paper>\n                    <Grid container direction=\"column\" alignItems=\"center\">\n                        <Grid item><Typography variant=\"h5\" align=\"center\">Special fusion materials</Typography></Grid>\n                        <Grid item>\n                            <TableContainer>\n                                <Table>\n                                    {\n                                        // <TableHead><TableRow><TableCell>Level</TableCell><TableCell>Name</TableCell></TableRow></TableHead>\n                                    }\n                                    <TableHead><TableRow><TableCell>Name</TableCell></TableRow></TableHead>\n                                    <TableBody>\n                                    {\n                                        this.props.special_fusion.map((material) => (\n                                            // <TableRow><TableCell>level</TableCell><TableCell><Link href={process.env.PUBLIC_URL+\"/#/\"+this.props.game+\"/demon/\"+material}>{material}</Link></TableCell></TableRow>\n                                            <TableRow><TableCell><Link href={process.env.PUBLIC_URL+\"/#/\"+this.props.game+\"/demon/\"+material}>{material}</Link></TableCell></TableRow>\n                                        ))\n                                    }\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </Grid>\n        }\n        else {\n            return <p>No es fusion especial</p>\n        }\n    }\n}\n\nexport default class Demon extends React.Component {\n    state = {\n        demon: {stats: [], skills: [], resistance: \"\"},\n        resi: {},\n        skill: {},\n        innate: [],\n        resistance_color: {'d': 'table-primary', 'r': 'table-info', 'n': 'table-secondary', 's': 'table-success', '-': '', 'w': 'table-danger'},\n        resistance_name: {'d': 'drain','r': 'repel','n': 'null','s': 'resists','-': 'normal','w': 'weak',},\n    \toptions: {\n    \t\tplotOptions: {\n    \t\t\tbar: {\n    \t\t\t\thorizontal: false,\n    \t\t\t\tdataLabels: {\n                  \t\tposition: 'top',\n                \t},\n    \t\t\t},\n    \t\t},\n    \t\tchart: {height: 450, type: 'bar'},\n    \t\ttitle: {text: 'Stats'},\n    \t\txaxis: {categories: game_specific.stats[this.props.match.params.game]},\n    \t\tyaxis: {max: game_specific.max_stat[this.props.match.params.game]}\n    \t},\n    }\n    is_ultimate() {\n        if (this.state.demon.ultimate) {\n            return <img width=\"20px\" height=\"20px\" src={process.env.PUBLIC_URL+\"/img/icons/star.svg\"} alt=\"no icono\"/>\n        }\n    }\n    componentDidMount() {\n        const name = this.props.match.params.name // we grab the ID from the URL\n        axios.get(API_URL + this.props.match.params.game + `/demon/${name}`).then(res => {\n            const demon = res.data\n            console.log(demon)\n            this.setState({ demon })\n        })\n    }\n    render() {\n        return (\n    \t    <Grid container spacing={3} alignItems=\"center\" justify=\"center\">\n                <Grid item sm={4}>\n                    <Paper>\n                    <Grid container direction=\"column\" alignItems=\"center\">\n                        <Grid item><Typography variant=\"h5\" align=\"center\">Race: <Link href={process.env.PUBLIC_URL+\"/#/\"+this.props.match.params.game+\"/race/\"+this.state.demon.race}>{this.state.demon.race}</Link></Typography></Grid>\n                        <Grid item><img className=\"img-thumbnail\" src={API_URL+\"/static/\"+this.props.match.params.game+\"/race/\" + this.state.demon.race + \".webp\"} alt={this.state.demon.race}/></Grid>\n                    </Grid>\n                    </Paper>\n                </Grid>\n                <Grid item sm={4}>\n                    <Paper>\n                    <Grid container direction=\"column\" alignItems=\"center\">\n                        <Grid item><Typography variant=\"h5\" align=\"center\"><b>{this.state.demon.name}</b> (<i>{this.state.demon.japanese_name}</i>){this.is_ultimate()}</Typography></Grid>\n                        <Grid item><img width=\"300px\" height=\"300px\" className=\"img-thumbnail\" align=\"center\" src={API_URL+\"/static/\"+this.props.match.params.game+\"/demon/\" + this.state.demon.name + \".png\"} alt={this.state.demon.name}/></Grid>\n                    </Grid>\n                    </Paper>\n                </Grid>\n                <Grid item sm={4}>\n                    <Paper>\n                    <Grid container direction=\"column\" alignItems=\"center\">\n                        <Grid item><Typography variant=\"h5\" align=\"center\">Level: {this.state.demon.level}</Typography></Grid>\n                        <Grid item><q className=\"text-center\">{this.state.demon.description}</q></Grid>\n                    </Grid>\n                    </Paper>\n                </Grid>\n                <Grid item sm={4} xs={12}>\n                    <Paper>\n                    <Grid container direction=\"column\" alignItems=\"stretch\">\n                        <Grid item><Typography variant=\"h5\" align=\"center\">Statistics</Typography></Grid>\n                        <Grid item><ReactApexChart options={this.state.options} series={[{data: this.state.demon.stats}]} type={this.state.options.chart.type} height={350}/></Grid>\n                    </Grid>\n                    </Paper>\n                </Grid>\n                <Grid item sm={4}>\n                    <Paper>\n                    <Grid container direction=\"column\" alignItems=\"center\">\n                        <Grid item><Typography variant=\"h5\" align=\"center\">Resistances</Typography></Grid>\n                        <Grid item>\n                        <TableContainer>\n                            <Table>\n                            <TableHead><TableRow><TableCell>Type</TableCell><TableCell>Resistance</TableCell></TableRow></TableHead>\n                            <TableBody>\n                            {\n                                game_specific.elements[this.props.match.params.game].map((elem, i) => {\n                                    return <TableRow><TableCell><img width=\"20px\" height=\"20px\" src={process.env.PUBLIC_URL+\"/img/icons/\"+game_specific.icons[this.props.match.params.game][i]} alt=\"no icono\"/> {elem}</TableCell><TableCell className={this.state.resistance_color[this.state.demon.resistance[i]]}>{this.state.resistance_name[this.state.demon.resistance[i]]}</TableCell></TableRow>\n                                })\n                            }\n                            </TableBody>\n                            </Table>\n                        </TableContainer>\n                        </Grid>\n                    </Grid>\n                    </Paper>\n                </Grid>\n                <Grid item sm={4}>\n                    <Paper>\n                    <Grid container direction=\"column\" alignItems=\"center\">\n                        <Grid item><Typography variant=\"h5\" align=\"center\">Skills</Typography></Grid>\n                        <Grid>\n                        <TableContainer>\n                            <Table>\n                                <TableHead><TableRow><TableCell>Level</TableCell><TableCell>Skill</TableCell></TableRow></TableHead>\n                                <TableBody>\n                                {\n                                    this.state.demon.skills.map((skill) => (\n                                        <TableRow><TableCell>{skill.level ? skill.level : \"-\"}</TableCell><TableCell><Link href={process.env.PUBLIC_URL+\"/#/\"+this.props.match.params.game+\"/skill/\"+skill.name}>{skill.name}</Link></TableCell></TableRow>\n                                    ))\n                                }\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                        </Grid>\n                    </Grid>\n                    </Paper>\n                </Grid>\n                <FusionTable special_fusion={this.state.demon.special_fusion} game={this.props.match.params.game}/>\n    \t\t</Grid>\n        )\n    }\n}\n","import React from 'react'\nimport axios from 'axios'\nimport MUIDataTable from 'mui-datatables'\nimport Link from '@material-ui/core/Link'\n\nimport {API_URL} from '../api.jsx'\n\nexport default class Demons extends React.Component {\n    state = {\n      demons: {},\n      options: {\n        filter: true,\n        filterType: \"dropdown\",\n        // pagination: false,\n        print: false,\n        selectableRows: 'none',\n        filterList: [\"Arcana\", \"Required Level\"],\n      },\n      columns: [\n          {\n            name: \"Name\",\n            options: {\n              filter: false,\n              customBodyRenderLite: (dataIndex) => {\n                let row = this.state.data[dataIndex]\n                let val = <Link href={process.env.PUBLIC_URL+\"/#/\"+this.props.match.params.game+\"/demon/\"+row[0]}>{row[0]}</Link>;\n                return val;\n              },\n            }\n          },\n          {\n            name: \"Arcana\",\n            options: {\n              customBodyRenderLite: (dataIndex) => {\n                let row = this.state.data[dataIndex]\n                let val = <Link href={process.env.PUBLIC_URL+\"/#/\"+this.props.match.params.game+\"/race/\"+row[1]}>{row[1]}</Link>;\n                return val;\n              },\n            }\n          },\n          \"Required Level\",\n      ],\n      data: [\n    ],\n    }\n\n  componentDidMount() {\n      axios.get(API_URL + this.props.match.params.game + `/demon`).then(res => {\n          const demons = Object.values(res.data).map(row => [row.name, row.race, row.level])\n          this.setState({ data: demons })\n      })\n  }\n\n  render() {\n      return (\n          <MUIDataTable\n          title=\"Demons\"\n          data={this.state.data}\n          columns={this.state.columns}\n          options={this.state.options}\n          />\n      );\n  }\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {BrowserRouter as Router, Route, HashRouter} from 'react-router-dom'\nimport { ThemeProvider } from '@material-ui/styles'\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport {Root, Header, Nav, Content, Footer, presets} from 'mui-layout'\nimport MenuRounded from '@material-ui/icons/MenuRounded'\nimport ChevronLeft from '@material-ui/icons/ChevronLeft'\nimport ChevronRight from '@material-ui/icons/ChevronRight'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport Typography from '@material-ui/core/Typography';\n\nimport Race from './components/race.jsx'\nimport Races from './components/races.jsx'\nimport Skill from './components/skill.jsx'\nimport Skills from './components/skills.jsx'\nimport Demon from './components/demon.jsx'\nimport Demons from './components/demons.jsx'\n\nconst baseTheme = createMuiTheme(); // or use your own theme;\nconst config = presets.createStandardLayout();\n\nclass Home extends React.Component {\n    render() {\n        return (\n            <img className=\"img-thumbnail\" align=\"center\" src=\"/img/yanderedev-mother-harlot.jpg\" alt=\"UFF\"/>\n        )\n    }\n}\n\n\nclass Acordeon extends React.Component {\n    state = {\n        games: [\n            // {key: 'p3p', name: 'Persona 3 Portable'},\n            {key: 'p4g', name: 'Persona 4 Golden'},\n            // {key: 'p5r', name: 'Persona 5 Royal'},\n            // {key: 'smt4', name: 'Shin Megami Tensei IV'},\n        ]\n    }\n    render() {\n        return (\n            <div>\n            {this.state.games.map(game => (\n            <Accordion>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                  >\n                    <Typography>{game.name}</Typography>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    <List component=\"nav\">\n                      {[\n                          {category: 'Races', url: process.env.PUBLIC_URL+'/#/'+game.key+'/race', icon: \"/img/icons/star-of-david.svg\"},\n                          {category: 'Demons', url: process.env.PUBLIC_URL+'/#/'+game.key+'/demon', icon: \"/img/icons/freebsd.svg\"},\n                          {category: 'Skills', url: process.env.PUBLIC_URL+'/#/'+game.key+'/skill', icon: \"/img/icons/lemon.svg\"},\n                      ].map(item => (\n                          <ListItem key={item.category} button component=\"a\" href={item.url}>\n                            <ListItemIcon><img className=\"img-icon\" src={item.icon} width=\"20px\" height=\"20px\"/></ListItemIcon>\n                            <ListItemText primary={item.category}/>\n                          </ListItem>\n                      ))}\n                    </List>\n                  </AccordionDetails>\n              </Accordion>\n            ))}\n            </div>\n        )\n    }\n}\n\n\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={baseTheme}>\n        <Root config={config}>\n          <Header\n            renderMenuIcon={open => (open ? <ChevronLeft /> : <MenuRounded />)}\n          >\n          <Button><Link href={process.env.PUBLIC_URL}><Typography variant=\"h6\" align=\"center\">MegatenDex</Typography></Link></Button>\n          </Header>\n          <Nav\n            renderIcon={collapsed =>\n              collapsed ? <ChevronRight /> : <ChevronLeft />\n            }\n          >\n          <Acordeon/>\n          </Nav>\n          <Content>\n          <Container>\n          <HashRouter basename={process.env.PUBLIC_URL}>\n              <Route path='/:game/demon/:name' component={Demon}/>\n              <Route path='/:game/race/:race' component={Race}/>\n              <Route path='/:game/skill/:skill' component={Skill}/>\n              <Route exact path='/:game/race' component={Races}/>\n              <Route exact path='/:game/demon' component={Demons}/>\n              <Route exact path='/:game/skill' component={Skills}/>\n              <Route exact path='/' component={Home} />\n          </HashRouter>\n          </Container>\n          </Content>\n        </Root>\n      </ThemeProvider>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}