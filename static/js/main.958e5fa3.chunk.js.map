{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","baseTheme","createMuiTheme","config","presets","createStandardLayout","Home","className","align","src","alt","React","Component","Demon","Demons","Race","Races","Skill","Skills","Acordeon","state","games","key","name","this","map","game","Accordion","AccordionSummary","expandIcon","aria-controls","id","Typography","AccordionDetails","List","component","category","url","icon","item","ListItem","button","href","ListItemIcon","width","height","ListItemText","primary","App","ThemeProvider","theme","renderMenuIcon","open","Button","Link","variant","renderIcon","collapsed","Container","basename","process","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.958e5fa3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {BrowserRouter as Router, Route, HashRouter} from 'react-router-dom'\nimport { ThemeProvider } from '@material-ui/styles'\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport {Root, Header, Nav, Content, Footer, presets} from 'mui-layout'\nimport MenuRounded from '@material-ui/icons/MenuRounded'\nimport ChevronLeft from '@material-ui/icons/ChevronLeft'\nimport ChevronRight from '@material-ui/icons/ChevronRight'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport Typography from '@material-ui/core/Typography';\n\nconst baseTheme = createMuiTheme(); // or use your own theme;\nconst config = presets.createStandardLayout();\n\nclass Home extends React.Component {\n    render() {\n        return (\n            <img className=\"img-thumbnail\" align=\"center\" src=\"/img/yanderedev-mother-harlot.jpg\" alt=\"UFF\"/>\n        )\n    }\n}\n\n\nclass Demon extends React.Component {\n    render() {\n        return <h1>Demon</h1>\n    }\n}\nclass Demons extends React.Component {\n    render() {\n        return <h1>Demons</h1>\n    }\n}\nclass Race extends React.Component {\n    render() {\n        return <h1>Race</h1>\n    }\n}\nclass Races extends React.Component {\n    render() {\n        return <h1>Races</h1>\n    }\n}\nclass Skill extends React.Component {\n    render() {\n        return <h1>Skill</h1>\n    }\n}\nclass Skills extends React.Component {\n    render() {\n        return <h1>Skills</h1>\n    }\n}\n\nclass Acordeon extends React.Component {\n    state = {\n        games: [\n            {key: 'p3p', name: 'Persona 3 Portable'},\n            {key: 'p4g', name: 'Persona 4 Golden'},\n            {key: 'p5r', name: 'Persona 5 Royal'},\n            {key: 'smt4', name: 'Shin Megami Tensei IV'},\n        ]\n    }\n    render() {\n        return (\n            <div>\n            {this.state.games.map(game => (\n            <Accordion>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                  >\n                    <Typography>{game.name}</Typography>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    <List component=\"nav\">\n                      {[\n                          {category: 'Races', url: '/'+game.key+'/race', icon: \"/img/icons/star-of-david.svg\"},\n                          {category: 'Demons', url: '/'+game.key+'/demon', icon: \"/img/icons/freebsd.svg\"},\n                          {category: 'Skills', url: '/'+game.key+'/skill', icon: \"/img/icons/lemon.svg\"},\n                      ].map(item => (\n                          <ListItem key={item.category} button component=\"a\" href={item.url}>\n                            <ListItemIcon><img className=\"img-icon\" src={item.icon} width=\"20px\" height=\"20px\"/></ListItemIcon>\n                            <ListItemText primary={item.category}/>\n                          </ListItem>\n                      ))}\n                    </List>\n                  </AccordionDetails>\n              </Accordion>\n            ))}\n            </div>\n        )\n    }\n}\n\n\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={baseTheme}>\n        <Root config={config}>\n          <Header\n            renderMenuIcon={open => (open ? <ChevronLeft /> : <MenuRounded />)}\n          >\n          <Button><Link href=\"/\"><Typography variant=\"h6\" align=\"center\">Megaten Zoo</Typography></Link></Button>\n          </Header>\n          <Nav\n            renderIcon={collapsed =>\n              collapsed ? <ChevronRight /> : <ChevronLeft />\n            }\n          >\n          <Acordeon/>\n          </Nav>\n          <Content>\n          <Container>\n          <Router basename={process.env.PUBLIC_URL}>\n              <Route path = '/:game/demon/:name' component={Demon}/>\n              <Route path = '/:game/race/:race' component={Race}/>\n              <Route path = '/:game/skill/:skill' component={Skill}/>\n              <Route exact path = '/:game/race' component={Races}/>\n              <Route exact path = '/:game/demon' component={Demons}/>\n              <Route exact path = '/:game/skill' component={Skills}/>\n              <Route exact path = '/' component={Home} />\n          </Router>\n          </Container>\n          </Content>\n        </Root>\n      </ThemeProvider>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}